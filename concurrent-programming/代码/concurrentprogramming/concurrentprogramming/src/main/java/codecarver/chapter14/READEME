volatile关键字最好的解释的例子

这边可以引入java内存模型和CPU缓存不一致问题的引入

缓存不一致是重点内容。

i=i+1 的深入理解

解决缓存不一致的方式：
1:给数据总线加锁 （串行读）
2：高速缓存一致性协议（重点）
核心思想：
1：当cpu写入数据的时候，如果发现该变量被共享（也就是说在其他CPU中也存在该变量的副本），
会发出一个信号，通知其他cpu变量的缓存无效
2：当其他CPU访问该变量的时候，重新到主内存进行获取



被volitale修饰，具备两层语义
1：保证不同线程的可见性
2：禁止对其重排序，也就保证了有序性
3：并未保证原子性


volite的使用场景
